version: '3'

services:
  jupyterhub:
    image: ${JUPYTERHUB_IMAGE}
    #container_name: jupyterhub
    expose:
      - 8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#      - /var/data/jupyterhub:/srv/jupyterhub
    environment:
      #- DOCKER_JUPYTER_CONTAINER=jupyterlab_img
      - DOCKER_JUPYTER_CONTAINERS=jupyterlab_testimg,ghcr.io/fhswf/jupyterhub/jupyterlab-scipy-gpu:main,ghcr.io/fhswf/jupyterhub/jupyterlab-scipy-cpu:main
      #- DOCKER_SPAWN_ENVS=NVIDIA_VISIBLE_DEVICES:1
      - DOCKER_NETWORK_NAME=traefik
      - HUB_IP=jupyterhub # same as serivce name
      - HOST
      - JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}
      - HUB_BASE_URL_PREFIX=${HUB_BASE_URL_PREFIX}
      
      - LTI_CLIENT_KEY=${LTI_CLIENT_KEY}
      - LTI_SHARED_SECRET=${LTI_SHARED_SECRET}
      - LTI13_PRIVATE_KEY=${LTI13_PRIVATE_KEY}

      - KEYCLOAK_LOGOUT_URL=${KEYCLOAK_LOGOUT_URL}

      - OAUTH2_TLS_VERIFY=${OAUTH2_TLS_VERIFY}
      - OAUTH2_AUTHORIZE_URL=${OAUTH2_AUTHORIZE_URL}
      # because here we have communicate internally, "jupiter.fh-swf.de" gets block by fh-swf rev. proxy 
      - OAUTH2_TOKEN_URL=${OAUTH2_INTERNAL_TOKEN_URL}
      #- OAUTH2_TOKEN_URL=${OAUTH2_TOKEN_URL}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - OAUTH_CALLBACK_URL=${OAUTH_CALLBACK_URL}
      - OAUTH2_USERDATA_URL=${OAUTH2_INTERNAL_USERDATA_URL}
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-core.rule=PathPrefix(`${HUB_BASE_URL_PREFIX}`)
    restart: on-failure

networks:
  traefik:
    name: traefik
    external: true
